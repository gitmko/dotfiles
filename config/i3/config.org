#+TITLE: i3wm Config
#+AUTHOR: mko

* Welcome to mko's i3wm config!
** nothing special here, pretty bare bones actually
** if you need help, https://i3wm.org/docs/ check out the docs

* COLORS
All the theming options for my i3wm config, from colors to fonts. Swap between color schemes by commenting out lines.
#+BEGIN_SRC sh :tangle config
## Dracula

# class                   border  backgr. text    indicator child_border
# client.focused          #bd93f9 #44475a #8be9fd #bd93f9   #bd93f9
# client.focused_inactive #bd93f9 #2f3d44 #ad69af #bd93f9
# client.unfocused        #bd93f9 #2f3d44 #ad69af #282c36
# client.urgent           #ff5555 #e6e6e6 #ad69af #59dffc
# client.placeholder      #000000 #0c0c0c #bd93f9 #000000

## Doom One

# class                 border  backgr. text    indicator child_border
client.focused          #51afef #556064 #80FFF9 #51afef   #51afef
client.focused_inactive #51afef #2F3D44 #AD69AF #454948
client.unfocused        #51afef #2F3D44 #AD69AF #454948
client.urgent           #ff6c6b #FDF6E3 #AD69AF #2688B2
client.placeholder      #000000 #0c0c0c #51afef #000000

font pango:SauceCodePro Nerd Font 10

default_border pixel 2
smart_borders on
default_floating_border none
default_floating_border normal 0
hide_edge_borders smart
#+END_SRC

#+RESULTS:

* i3wm STANDARDS
Stuff from the default i3 config im didn't tamper with
#+BEGIN_SRC sh :tangle config
# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Set the mod key to the super key (change to Mod1 for the alt key)
set $mod Mod4

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

#
# Terminal, Run Launcher and Gaps
#

# change "alacritty -e fish" to whatever terminal you prefer
set $TERM "alacritty -e fish"

# set your run launcher
set $RUN "dmenu_run"

# start a terminal
bindsym $mod+Return exec $TERM

# start a run launcher
bindsym $mod+Shift+Return exec --no-startup-id $RUN

# kill focused window
bindsym $mod+Shift+c kill
#+END_SRC

* TILING, RESIZING AND GAPS
More ricing options, set the gap size and control the tiling
NOTE: I have a few python scripts, all of which are located in $HOME/config/i3
these scripts are from https://github.com/Hippo0o/i3-master-layout and are used to give me the master and stack layout functionality
dependencies: i3ipc (pip3 install i3ipc) (pip comes from the python-pip package)
#+BEGIN_SRC sh :tangle config
smart_gaps on
gaps inner 4
gaps outer 4

bindsym $mod+q exec --no-startup-id ~/.config/i3/i3-swap-master.py

# change window focus
bindsym $mod+h focus left bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+y split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# resize window (you can also use the mouse for that, hold right click)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"
#+END_SRC

* WORKSPACES
All my workspace settings, if you want to change the name of the workspaces, make sure to add the corresponding number.. for example "10:*name of workspace*"
Don't forget to add the newly created workspace it's own keybindings.
#+BEGIN_SRC sh :tangle config
set $ws1 "1:www"
set $ws2 "2:chat"
set $ws3 "3:term"
set $ws4 "4:file"
set $ws5 "5:emacs"
set $ws6 "6:extra"
set $ws7 "7:spot"
set $ws8 "8:virt"
set $ws9 "9:hmwrk"

bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9

bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
#+END_SRC

* EXTRAS
Some extras, such as DT's dmscripts and turning off mouse warping (puts the mouse in the middle of the newly opened window)
Get DT's dmscripts from his gitlab: https://gitlab.com/dwt1/dmscripts
#+BEGIN_SRC sh :tangle config
bindsym $mod+Shift+e exec "dm-logout"

bindsym $mod+Shift+q exec "dm-hub"

mouse_warping none
focus_follows_mouse no
#+END_SRC

* AUTOSTART AND KEYBINDINGS
#+BEGIN_SRC sh :tangle config
# Autostart apps
exec_always     --no-startup-id ~/.config/polybar/launch.sh            # Polybar script
exec_always     --no-startup-id ~/.config/mk-lang                      # MK language
exec_always     --no-startup-id ~/.config/i3/i3-master-layout.py       # master and stack layout for i3wm
exec            --no-startup-id nitrogen --restore
exec            --no-startup-id picom
exec            --no-startup-id dunst
exec            --no-startup-id lxsession
exec            --no-startup-id emacs --daemon
exec            --no-startup-id nm-applet
exec            --no-startup-id mpd
exec            --no-startup-id flameshot

# I personally have some issues with my main monitor not being set right with a double monitor so I have this script to set it for me on boot, just comment this line out
exec            --no-startup-id ~/.screenlayout/primarymonitor.sh

# Floating mode for specific apps
for_window [class="Lxappearance" instance="lxappearance"] floating enable
for_window [class="Nitrogen"] floating enable

# Apps go to the specific workspace (change this accoring to your workflow)
assign [class="Firefox"] $ws1
assign [class="Brave"] $ws1
assign [class="LibreWolf"] $ws1
for_window [class="Spotify"] move to workspace $ws7
assign [class="Virt-manager"] $ws8
assign [class="discord"] $ws2

# Custom keybinds for stuff (again, change according to your workflow)
bindsym $mod+Shift+b exec "firefox"
bindsym $mod+Ctrl+Return exec "pcmanfm"
bindsym $mod+Shift+v exec "virt-manager"
bindsym $mod+Shift+s exec "LD_PRELOAD=/usr/lib/spotify-adblock.so spotify"
bindsym $mod+Shift+f exec "emacsclient -c -a 'emacs'"
bindsym $mod+Ctrl+a exec "discord"

# Screenshotting
# dependencies: flameshot
bindsym Ctrl+Shift+l exec "flameshot gui"

# GIF recording
# dependencies: peek
bindsym Ctrl+Shift+g exec "peek"
#+END_SRC

* CLI UTILITIES
Watching anime from the terminal with ani-cli!
Get ani-cli from: https://github.com/pystardust/ani-cli
Dependencies: curl, mpv, ffmpeg
NOTE: do remember to change the terminal to your preferred terminal emulator if you want to use this keybinding.

Watching movies from the terminal!
Get mov-cli from: https://github.com/mov-cli/mov-cli
Dependencies: curl, mpv, ffmpeg, fzf
(Optional) Dependencies: Python
NOTE: do remember to change the terminal to your preferred terminal emulator if you want to use this keybinding.

Locking your screen with betterlockscreen!
Get betterlockscreen from: https://github.com/betterlockscreen/betterlockscreen
Dependencies: imagemagick, i3-lock-color
#+BEGIN_SRC sh :tangle config
bindsym $mod+Shift+a exec "alacritty --hold -e ani-cli"

bindsym $mod+Ctrl+m exec "alacritty --hold -e $HOME/github/mov-cli/mov-cli"

bindsym $mod+Ctrl+l exec "betterlockscreen -l dimblur"
#+END_SRC
